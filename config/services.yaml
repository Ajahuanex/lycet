# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'
    token: '%env(CLIENT_TOKEN)%'
    data_path: '%kernel.project_dir%/data'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Greenter\Report\XmlUtils:
        public: true

    Greenter\Report\HtmlReport:
        arguments:
            - ''
            - cache: '%kernel.cache_dir%'
              strict_variables: true

    Greenter\Report\PdfReport:
        arguments: ['@Greenter\Report\HtmlReport']
        calls:
            - [setBinPath, ['%env(WKHTMLTOPDF_PATH)%']]

    Greenter\Validator\SymfonyValidator:
        autowire: true

    App\Service\AppDocumentValidator:
        autowire: true

    App\Service\DocumentRequest:
        autowire: true

    Greenter\Validator\DocumentValidatorInterface: '@App\Service\AppDocumentValidator'
    Greenter\Report\ReportInterface:
        alias: Greenter\Report\PdfReport
        public: true

    App\Service\DocumentRequestInterface: '@App\Service\DocumentRequest'

    phpdoc_serializer:
        class: Symfony\Component\Serializer\Serializer
        factory: 'App\Factory\AppSerializerFactory:createSerializer'

    Symfony\Component\Serializer\Normalizer\DenormalizerInterface: '@phpdoc_serializer'

    Greenter\See:
        public: true
        calls:
            - [setCachePath, ['%kernel.cache_dir%']]

    App\Service\FileConfigProvider:
        arguments: ['%data_path%']

    App\Service\ConfigProviderInterface:
        alias: App\Service\FileConfigProvider
        public: true

    App\EventSubscriber\TokenSubscriber:
        arguments:
            $token: '%token%'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
